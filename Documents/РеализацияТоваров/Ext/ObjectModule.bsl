&НаСервере
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// Перед записью надо почистить дубли в таблице
	// Если вдруг один и тот же товар по одной цене попал несколько раз - объединяем их
	ТабНоменклатура.Свернуть("Номенклатура, Цена", "Количество, Сумма");
	
	// Считаем общую сумму всего документа
	СуммаИтого = ТабНоменклатура.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	// Проверяем, что документ создается на основании счета
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СчетНаОплату") Тогда
		
		// Копируем шапку из счета
		Контрагент = ДанныеЗаполнения.Контрагент;
		Организация = ДанныеЗаполнения.Организация;
		Договоры = ДанныеЗаполнения.Договоры;
		
		// Теперь заполняем таблицу, но не все подряд
		Для Каждого ТекСтрокаТабНоменклатура Из ДанныеЗаполнения.ТабНоменклатура Цикл
			
			// Берем только товары, услуги и прочее нам не нужны
			Если ТекСтрокаТабНоменклатура.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар Тогда
				
				НоваяСтрока = ТабНоменклатура.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТабНоменклатура.Номенклатура;
				НоваяСтрока.Количество = ТекСтрокаТабНоменклатура.Количество;
				НоваяСтрока.Цена = ТекСтрокаТабНоменклатура.Цена;
				НоваяСтрока.Сумма = ТекСтрокаТабНоменклатура.Сумма;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Фиксируем, что покупатель теперь нам должен
	// Приход - значит у нас появилась дебиторка
	Движения.Взаиморасчеты.Записывать = Истина;
	Движение = Движения.Взаиморасчеты.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Организация = Организация;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договоры;
	Движение.Сумма = СуммаИтого;

	// Списываем товар со склада
	// Проходим по всем строкам и каждую позицию вычитаем из остатков
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Для Каждого ТекСтрокаТабНоменклатура Из ТабНоменклатура Цикл
		Движение = Движения.ОстаткиНоменклатуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Склад = Склад;
		Движение.Номенклатура = ТекСтрокаТабНоменклатура.Номенклатура;
		Движение.Количество = ТекСтрокаТабНоменклатура.Количество;
		Движение.Сумма = ТекСтрокаТабНоменклатура.Сумма;
	КонецЦикла;
	
	// Записываем данные о продажах в регистр Продажи
	Движения.Продажи.Записывать = Истина;
	Для Каждого ТекСтрокаТабНоменклатура Из ТабНоменклатура Цикл
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Клиент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТабНоменклатура.Номенклатура;
		Движение.Количество = ТекСтрокаТабНоменклатура.Количество;
		Движение.Сумма = ТекСтрокаТабНоменклатура.Сумма;
	КонецЦикла;
	
	// Сначала сохраняем движения, а потом проверяем
	// Иначе запрос не увидит изменения от текущего документа
	Движения.ОстаткиНоменклатуры.Записать();
	Движения.Продажи.Записать();
	
	// Проверяем, не ушли ли остатки в минус
	// Нельзя продать больше, чем есть на складе
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Организация КАК Организация,
		|	ОстаткиНоменклатурыОстатки.Склад КАК Склад,
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|		,
		|		Склад = &Склад
		|			И Организация = &Организация
		|			И Номенклатура В
		|				(ВЫБРАТЬ
		|					РеализацияТоваровТабНоменклатура.Номенклатура
		|				ИЗ
		|					Документ.РеализацияТоваров.ТабНоменклатура КАК РеализацияТоваровТабНоменклатура
		|				ГДЕ
		|					РеализацияТоваровТабНоменклатура.Ссылка = &Ссылка)) КАК ОстаткиНоменклатурыОстатки
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	// Если нашли товары с отрицательным остатком - ругаемся и не даем провести
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		// Пишем понятное сообщение - какой товар, на каком складе и насколько не хватает
		ТекстСообщения = СтрШаблон(
			"Недостаточно товара ""%1"" на складе ""%2""! Остаток станет отрицательным: %3",
			ВыборкаДетальныеЗаписи.Номенклатура,
			ВыборкаДетальныеЗаписи.Склад,
			ВыборкаДетальныеЗаписи.КоличествоОстаток);
		
		// Показываем ошибку и блокируем проведение
		Сообщить(ТекстСообщения);
		Отказ = Истина;
		
	КонецЦикла;
	
КонецПроцедуры