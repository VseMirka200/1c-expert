&НаСервере
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// Перед записью надо почистить дубли в таблице
	// Если вдруг одна и та же услуга по одной цене попала несколько раз - объединяем их
	ТабНоменклатура.Свернуть("Номенклатура, Цена", "Количество, Сумма");
	
	// Считаем общую сумму всего документа
	СуммаИтого = ТабНоменклатура.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	// Проверяем, что документ создается на основании счета
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СчетНаОплату") Тогда
		
		// Копируем шапку из счета
		Контрагент = ДанныеЗаполнения.Контрагент;
		Организация = ДанныеЗаполнения.Организация;
		Договоры = ДанныеЗаполнения.Договоры;
		
		// Теперь заполняем таблицу, но берем только услуги
		Для Каждого ТекСтрокаТабНоменклатура Из ДанныеЗаполнения.ТабНоменклатура Цикл
			
			// Товары нам не нужны, берем только услуги
			Если ТекСтрокаТабНоменклатура.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга Тогда
				
				НоваяСтрока = ТабНоменклатура.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаТабНоменклатура.Номенклатура;
				НоваяСтрока.Количество = ТекСтрокаТабНоменклатура.Количество;
				НоваяСтрока.Цена = ТекСтрокаТабНоменклатура.Цена;
				НоваяСтрока.Сумма = ТекСтрокаТабНоменклатура.Сумма;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// Фиксируем, что покупатель теперь нам должен за услуги
	// Приход - значит у нас появилась дебиторка
	Движения.Взаиморасчеты.Записывать = Истина;
	Движение = Движения.Взаиморасчеты.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Организация = Организация;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договоры;
	Движение.Сумма = СуммаИтого;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры